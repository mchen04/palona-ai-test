# ==============================================================================
# AI COMMERCE CHATBOT - ENVIRONMENT CONFIGURATION
# ==============================================================================
# Copy this file to .env.local and fill in your actual API keys
# NEVER commit .env.local to version control!
# ==============================================================================

# ------------------------------------------------------------------------------
# OPENROUTER API KEY (Required)
# ------------------------------------------------------------------------------
# Powers the conversational AI (Grok-4-fast model) and vision capabilities
#
# How to get:
# 1. Visit: https://openrouter.ai
# 2. Sign up for a free account (no credit card required)
# 3. Go to: https://openrouter.ai/keys
# 4. Click "Create Key" and copy it
#
# Format: sk-or-v1-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# Free tier: Generous limits with Grok-4-fast (2M token context window)
# Cost: FREE for Grok-4-fast model
#
# Used in:
# - src/lib/ai/config.ts (chat model)
# - src/lib/ai/imageAnalyzer.ts (vision model)
# - src/lib/ai/ragChain.ts (RAG pipeline)
# ------------------------------------------------------------------------------
OPENROUTER_API_KEY=your_openrouter_api_key_here


# ------------------------------------------------------------------------------
# GOOGLE GEMINI API KEY (Required)
# ------------------------------------------------------------------------------
# Powers vector embeddings for semantic product search
#
# How to get:
# 1. Visit: https://makersuite.google.com/app/apikey
# 2. Sign in with your Google account
# 3. Click "Create API Key"
# 4. Select "Create API key in new project" or use existing
# 5. Copy your API key
#
# Format: AIzaxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# Free tier: 1,500 requests per day (more than enough)
# Model used: text-embedding-004 (768 dimensions)
# Cost: FREE for the quota provided
#
# Used in:
# - src/lib/ai/retriever.ts (vector search)
# - src/lib/ai/cachedRetriever.ts (cached retriever)
# - src/scripts/generateEmbeddings.ts (populate Pinecone)
# ------------------------------------------------------------------------------
GEMINI_API_KEY=your_gemini_api_key_here


# ------------------------------------------------------------------------------
# PINECONE API KEY (Required)
# ------------------------------------------------------------------------------
# Powers the vector database for product embeddings
#
# How to get:
# 1. Visit: https://www.pinecone.io
# 2. Sign up for free (no credit card required)
# 3. Go to: https://app.pinecone.io/organizations/-/projects/-/keys
# 4. Copy your API key from the default project
#
# You also need to create an index manually:
# - Index name: product-embeddings
# - Dimensions: 768
# - Metric: cosine
# - Cloud: AWS
# - Region: us-east-1
# - Type: Serverless (free tier)
#
# Free tier: 100K vectors, 1GB storage (perfect for 32 products)
# Cost: FREE for the quota provided
#
# Used in:
# - src/lib/ai/pinecone.ts (vector database connection)
# - src/lib/ai/retriever.ts (product search)
# - src/scripts/generateEmbeddings.ts (populate database)
# ------------------------------------------------------------------------------
PINECONE_API_KEY=your_pinecone_api_key_here


# ------------------------------------------------------------------------------
# APPLICATION URL (Optional)
# ------------------------------------------------------------------------------
# Your application's URL (used for OpenRouter attribution)
#
# Development: http://localhost:3000
# Production: https://your-app.vercel.app (replace with your actual URL)
#
# This is displayed in OpenRouter's dashboard for request attribution
# Not required but recommended for tracking usage
#
# Used in:
# - src/lib/ai/config.ts (OpenRouter headers)
# - src/lib/ai/imageAnalyzer.ts (OpenRouter headers)
# - src/lib/ai/ragChain.ts (OpenRouter headers)
# ------------------------------------------------------------------------------
NEXT_PUBLIC_APP_URL=http://localhost:3000


# ==============================================================================
# SETUP INSTRUCTIONS
# ==============================================================================
#
# 1. Copy this file:
#    cp .env.example .env.local
#
# 2. Fill in your API keys above (all three are required)
#
# 3. Create Pinecone index manually:
#    - Go to Pinecone console
#    - Create index named "product-embeddings"
#    - Set dimensions to 768, metric to cosine
#    - Use serverless type in us-east-1 region
#
# 4. Generate embeddings:
#    npm run generate-embeddings
#    (This populates Pinecone with product vectors)
#
# 5. Start the development server:
#    npm run dev
#
# 6. Test in browser:
#    Open http://localhost:3000
#
# ==============================================================================
# TROUBLESHOOTING
# ==============================================================================
#
# "API key not found" errors:
# - Make sure this file is named .env.local (not .env.example)
# - Verify it's in the src/ directory
# - Check there are no spaces around the = sign
# - Don't use quotes around the API keys
# - Restart the dev server after making changes
#
# "Failed to generate embeddings":
# - Verify all three API keys are set
# - Check Pinecone index exists and is named correctly
# - Ensure index has 768 dimensions
#
# "No products in search results":
# - Run: npm run generate-embeddings
# - Check Pinecone console shows 32 vectors
#
# For more help, see: docs/TROUBLESHOOTING.md
#
# ==============================================================================
# SECURITY NOTES
# ==============================================================================
#
# IMPORTANT:
# - NEVER commit .env.local to version control
# - .env.local is already in .gitignore
# - Keep your API keys secure and private
# - Rotate keys if accidentally exposed
# - Use different keys for development and production
# - Monitor your API usage on provider dashboards
#
# ==============================================================================